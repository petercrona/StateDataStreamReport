\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}Background}{5}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces  Traditionally the web server has contained logic and then delivered a rendered page to the user. The rendered page typically contained }}{5}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces  Today it is common to develop single page web applications. This is in some sense a standalone application delivered by a web server with the only responsibility to deliver files. }}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}Callbacks directly}{6}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1}Pseudo code showing a callback only approach}{6}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2}Pseudo code showing a callback only approach where we are loading two pieces of data\tmspace  +\thinmuskip {.1667em} where the second is dependent on the first}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}Using promises}{7}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3}Pseudo code showing an approach where we use promises}{7}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {4}Pseudo code showing an approach using promises where we are loading two pieces of data\tmspace  +\thinmuskip {.1667em} where the second is dependent on the first}{7}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {5}Pseudo code showing an approach using promises where we are loading two pieces of data\tmspace  +\thinmuskip {.1667em} where the second is dependent on the first}{8}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {6}Pseudo code showing an approach using promises where we are loading two pieces of data\tmspace  +\thinmuskip {.1667em} where the second is dependent on the first}{8}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {7}Pseudo code showing an approach using promises where we are loading two pieces of data\tmspace  +\thinmuskip {.1667em} where the second is dependent on the first}{9}}
\@writefile{toc}{\contentsline {section}{\numberline {2}The StateDataStream way}{10}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {8}Pseudo code showing an approach using StateDataStream where we are loading two pieces of data\tmspace  +\thinmuskip {.1667em} where the second is dependent on the first.}{10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Specifying the stream}{11}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.1}Writing to the stream}{11}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {9}Examples of listRef and objectRef keys}{11}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.2}Error handling}{12}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {10}Attaching an error handler to the stream}{12}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Executing the stream}{12}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {11}Executing the stream}{12}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Conclusion and future considerations}{13}}
\newlabel{sec:future}{{3}{13}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Running state dependent writes in parallel}{13}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {12}Executing the stream}{13}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {13}Executing the stream}{13}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Specifying dependencies between writes}{13}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {14}Executing the stream}{14}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {15}Executing the stream}{14}}
